{"id":"R+uE","dependencies":[{"name":"C:\\Users\\sgoldber\\Documents\\Codesmith\\mockbuster\\mockbuster\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1533165805430},{"name":"C:\\Users\\sgoldber\\Documents\\Codesmith\\mockbuster\\mockbuster\\package.json","includedInParent":true,"mtime":1533772882167},{"name":"C:\\Users\\sgoldber\\Documents\\Codesmith\\mockbuster\\mockbuster\\.babelrc","includedInParent":true,"mtime":1533165732168}],"generated":{"js":"\"use strict\";module.exports=function(n){return function(t){return n.apply(null,t)}};","map":{"mappings":[{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":23,"column":0},"generated":{"line":1,"column":13}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":23,"column":0},"generated":{"line":1,"column":20}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":23,"column":0},"generated":{"line":1,"column":28}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":23,"column":0},"generated":{"line":1,"column":37}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":24,"column":0},"generated":{"line":1,"column":40}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":24,"column":0},"generated":{"line":1,"column":47}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":24,"column":0},"generated":{"line":1,"column":56}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":25,"column":0},"generated":{"line":1,"column":59}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":25,"column":0},"generated":{"line":1,"column":66}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":25,"column":0},"generated":{"line":1,"column":68}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":25,"column":0},"generated":{"line":1,"column":74}},{"source":"..\\node_modules\\axios\\lib\\helpers\\spread.js","original":{"line":25,"column":0},"generated":{"line":1,"column":79}}],"sources":{"..\\node_modules\\axios\\lib\\helpers\\spread.js":"'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"},"lineCount":null}},"hash":"7c5212b086ba04d3792a90e6bad72771","cacheData":{"env":{}}}